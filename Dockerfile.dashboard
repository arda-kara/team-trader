# Use Node.js as the base image for the dashboard frontend
FROM node:20-slim as frontend-builder

# Set working directory for frontend
WORKDIR /app/frontend

# Copy frontend package files
COPY dashboard/frontend/package*.json ./

# Install frontend dependencies
RUN npm install

# Copy frontend source code
COPY dashboard/frontend/ ./

# Build the frontend
RUN npm run build

# Use Python 3.10 as the base image for the backend
FROM python:3.10-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy project files
COPY . .

# Copy built frontend from the frontend-builder stage
COPY --from=frontend-builder /app/frontend/build /app/dashboard/frontend/build

# Create necessary directories
RUN mkdir -p /app/data /app/logs

# Expose the dashboard port
EXPOSE 8000

# Set default command
CMD ["python", "-m", "dashboard.api.main", "--host", "0.0.0.0", "--port", "8000"]
